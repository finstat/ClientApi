<Fluent:RibbonWindow
        x:Class="DesktopFinstatApiTester.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopFinstatApiTester.Windows"
        xmlns:controls="clr-namespace:DesktopFinstatApiTester.Controls"
        xmlns:Fluent="urn:fluent-ribbon"
        mc:Ignorable="d"
        Title="FinStat API Tester" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="60*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="700*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Fluent:Ribbon Grid.Row="0" Grid.ColumnSpan="2" x:Name="Ribbon">
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonClose}" />
            </Fluent:Ribbon.QuickAccessItems>
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Header="FinStat API Tester" IsOpen="False" x:Name="settingBackStage">
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="Access" IsSelected="False" x:Name="backStageTabItemAccess" Initialized="backStageTabItemAccess_Initialized">
                            <Fluent:BackstageTabItem.Content>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50"/>
                                        <RowDefinition Height="280"/>
                                        <RowDefinition Height="35"/>
                                        <RowDefinition Height="200*"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.ColumnSpan="3" Content="Api Keys" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" Margin="{DynamicResource Margin5}"/>
                                    <controls:SettingControl Grid.ColumnSpan="3" Grid.Row="1" x:Name="controlSettings"/>
                                    <Button x:Name="buttonSave"  Content="Use" Grid.Column="0" HorizontalAlignment="Stretch" Margin="{DynamicResource Margin5}" Grid.Row="2" VerticalAlignment="Stretch" Width="Auto" Click="buttonSave_Click"/>
                                    <Button x:Name="buttonSaveAndStore"  Content="Use and Save" Grid.Column="1" HorizontalAlignment="Stretch" Margin="{DynamicResource Margin5}" Grid.Row="2" VerticalAlignment="Stretch" Width="Auto" Click="buttonSaveAndStore_Click"/>
                                    <Button x:Name="buttonCancel" Content="Cancel" Grid.Column="2" HorizontalAlignment="Stretch" Margin="{DynamicResource Margin5}" Grid.Row="2" VerticalAlignment="Stretch" Width="Auto" Click="buttonCancel_Click" />
                                </Grid>
                            </Fluent:BackstageTabItem.Content>
                        </Fluent:BackstageTabItem>
                        <Fluent:Button x:Name="buttonClose"  Header="Close" Click="buttonClose_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Detail API">
                <Fluent:RibbonGroupBox Header="SK Detail">
                    <Fluent:Button x:Name="buttonDetail" Header="Basic" Click="buttonDetail_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonExtended" Header="Extended" Click="buttonExtended_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonUltimate" Header="Ultimate" Click="buttonUltimate_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="SK Other">
                    <Fluent:Button x:Name="buttonAutoComplete" Header="Auto Complete" Click="buttonAutoComplete_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconSearchLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonAutoLogin" Header="Auto LogIn" Click="buttonAutoLogin_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconUserKeyLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="CZ Detail">
                    <Fluent:Button x:Name="buttonCZDetail" Header="Detail" Click="buttonCZDetail_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="CZ Other">
                    <Fluent:Button x:Name="buttonCZAutoComplete" Header="Auto Complete" Click="buttonCZAutoComplete_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconSearchLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonCZAutoLogin" Header="Auto LogIn" Click="buttonCZAutoLogin_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconUserKeyLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Monitoring API">
                <Fluent:RibbonGroupBox Header="SK ICO">
                    <Fluent:Button x:Name="buttonMonitoringIcoAdd" Header="Add" Click="buttonMonitoringIcoAdd_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellAddLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringIcoRemove" Header="Remove" Click="buttonMonitoringIcoRemove_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellRemoveLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringIcoList" Header="List" Click="buttonMonitoringIcoList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringIcoReport" Header="Report" Click="buttonMonitoringIcoReport_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconReportLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringIcoProceedings" Header="Proceedings" Click="buttonMonitoringIcoProceedings_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconLibraryLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="SK Date">
                    <Fluent:Button x:Name="buttonMonitoringDateAdd" Header="Add" Click="buttonMonitoringDateAdd_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellAddLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringDateRemove" Header="Remove" Click="buttonMonitoringDateRemove_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellRemoveLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringDateList" Header="List" Click="buttonMonitoringDateList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringDateReport" Header="Report" Click="buttonMonitoringDateReport_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconReportLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonMonitoringDateProceedings" Header="Proceedings" Click="buttonMonitoringDateProceedings_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconLibraryLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="CZ ICO">
                    <Fluent:Button x:Name="buttonCZMonitoringIcoAdd" Header="Add" Click="buttonCZMonitoringIcoAdd_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellAddLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonCZMonitoringIcoRemove" Header="Remove" Click="buttonCZMonitoringIcoRemove_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBellRemoveLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonCZMonitoringIcoList" Header="List" Click="buttonCZMonitoringIcoList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonCZMonitoringIcoReport" Header="Report" Click="buttonCZMonitoringIcoReport_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconReportLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Statement">
                <Fluent:RibbonGroupBox Header="Statement">
                    <Fluent:Button x:Name="buttonStatements" Header="List" Click="buttonStatements_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonStatementDetiail" Header="Detail" Click="buttonStatementDetiail_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonStatementLegend" Header="Legend" Click="buttonStatementLegend_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDictionaryLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Diff">
                <Fluent:RibbonGroupBox Header="Daily">
                    <Fluent:Button x:Name="buttonDailyDiffList" Header="List" Click="buttonDailyDiffList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDailyDiffFile" Header="File" Click="buttonDailyDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDownloadLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonOpenDailyDiffFile" Header="Open" Click="buttonOpenDailyDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBookOpenLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Statement">
                    <Fluent:Button x:Name="buttonDailyStatementDiffList" Header="List" Click="buttonDailyStatementDiffList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDailyStatementDiffFile" Header="File" Click="buttonDailyStatementDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDownloadLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonOpenDailyStatementDiffFile" Header="Open" Click="buttonOpenDailyStatementDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBookOpenLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonOpenDailyStatementDiffLegend" Header="Legend" Click="buttonOpenDailyStatementDiffLegend_Click"   >
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDictionaryLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Ultimate">
                    <Fluent:Button x:Name="buttonDailyUltimateDiffList" Header="List" Click="buttonDailyUltimateDiffList_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDailyUltimateDiffFile" Header="File" Click="buttonDailyUltimateDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDownloadLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonOpenDailyUltimateDiffFile" Header="Open" Click="buttonOpenDailyUltimateDiffFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconBookOpenLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Distraint">
                <Fluent:RibbonGroupBox Header="Paid">
                    <Fluent:Button x:Name="buttonDistraintSearch" Header="Search" Click="buttonDistraintSearch_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconSearchLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDistraintDetail" Header="Detail" Click="buttonDistraintDetail_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button x:Name="buttonDistraintResults" Header="Results" Click="buttonDistraintResults_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDistraintResultsToken" Header="Results By Token" Click="buttonDistraintResultsToken_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconListLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="buttonDistraintStoredDetail" Header="Stored Detail" Click="buttonDistraintStoredDetail_Click">
                        <Fluent:Button.LargeIcon>
                            <Path Data="{DynamicResource IconDetailLarge}" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <DataGrid x:Name="datagridResponse" HorizontalAlignment="Stretch" Height="Auto" Margin="{DynamicResource Margin5}" ItemsSource="{Binding ResponseItems}" Grid.Row="1" VerticalAlignment="Stretch" Width="Auto" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False" SelectionChanged="datagridResponse_SelectionChanged">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Source" Width="20*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding ApiSource}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Request" Width="20*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding Request}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Parameters" Width="25*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding Parameter}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Send" Width="30*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding Send, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Received" Width="30*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding Received, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Data Count" Width="20*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label Content="{Binding DataCount}" VerticalAlignment="Stretch" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <TabControl Name ="tabControlResponse"  Grid.Row="1" Grid.Column="1">
            <TabItem Header="Data">
                <!-- Code From https://stackoverflow.com/questions/3668802/looking-for-an-object-graph-tree-view-control-for-wpf?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa-->
                <TreeView Name="treeViewObjectGraph" Margin="{DynamicResource Margin5}"  FontSize="13" FontFamily="Consolas" MouseRightButtonDown="treeViewObjectGraph_MouseRightButtonDown" ItemContainerStyle="{DynamicResource StyleGraphTreeViewItem}" ItemTemplate="{DynamicResource TemplateTreeViewItem}">
                    <TreeView.Resources>
                        <ContextMenu x:Key ="TreeViewItemContextMenu"  StaysOpen="true">
                            <!--MenuItem x:Name="treeViewToggle" Header="Toggle Expand" Click="treeViewToggle_Click"/>
                    <MenuItem x:Name="treeViewSelect" Header="Toggle Select" Click="treeViewSelect_Click" /-->
                            <MenuItem x:Name="treeViewCopyValueToClipboard" Header="Copy Value To Clipboard" Click="treeViewCopyValueToClipboard_Click"/>
                            <Separator/>
                            <MenuItem x:Name="treeViewShowInOutputWindow" Header="Show In Output Window" Click="treeViewShowInOutputWindow_Click" />
                            <MenuItem x:Name="treeViewCopyToClipboard" Header="Copy To Clipboard" Click="treeViewCopyToClipboard_Click" />
                            <Separator/>
                            <MenuItem x:Name="treeViewShowTreeOutputWindow" Header="Show Tree In Output Window" Click="treeViewShowTreeInOutputWindow_Click" />
                            <MenuItem x:Name="treeViewShowXMLInOutputWindow" Header="Show XML In Output Window" Click="treeViewShowXMLInOutputWindow_Click"/>
                            <MenuItem x:Name="treeViewShowJSONInOutputWindow" Header="Show JSON In Output Window"  Click="treeViewShowJSONInOutputWindow_Click"/>
                        </ContextMenu>
                    </TreeView.Resources>
                </TreeView>
            </TabItem>
            <TabItem Header="Headers">
                <!-- Code From https://stackoverflow.com/questions/3668802/looking-for-an-object-graph-tree-view-control-for-wpf?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa-->
                <TreeView Name="treeViewHeadersGraph" Margin="{DynamicResource Margin5}"  FontSize="13" FontFamily="Consolas" ItemContainerStyle="{DynamicResource StyleGraphTreeViewItem}" ItemTemplate="{DynamicResource TemplateTreeViewItem}" />
            </TabItem>
        </TabControl>
        <Fluent:StatusBar Grid.Row="2" Grid.ColumnSpan="2" >
            <Fluent:StatusBarItem Title=""
                          Value="150"
                          HorizontalAlignment="Left">
                <TextBlock Text="" x:Name="textBlockStatusBarLeft"/>
            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem Title=""
                          HorizontalAlignment="Right">
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Stretch" Orientation="Horizontal" DataContext="{Binding Limits}">
                    <Label Content="Limits: " Foreground="White" />
                    <Label Content="Daily - " Foreground="White" />
                    <Label Content="{Binding Daily.Current}" Foreground="White" />
                    <Label Content="/" Foreground="White" />
                    <Label Content="{Binding Daily.Max}" Foreground="White" />
                    <Label Content=" | " Foreground="White" />
                    <Label Content="Monthly - " Foreground="White" />
                    <Label Content="{Binding Monthly.Current}" Foreground="White" />
                    <Label Content="/" Foreground="White" />
                    <Label Content="{Binding Monthly.Max}" Foreground="White" />
                </StackPanel>
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>
    </Grid>
</Fluent:RibbonWindow>
